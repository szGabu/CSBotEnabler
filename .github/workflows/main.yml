name: Manual Build
on:
  workflow_dispatch:

jobs:
  build:
    name: Build Project
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Environment
        shell: bash
        run: |
          echo "GITHUB_SHA_SHORT=${GITHUB_SHA::7}" >> $GITHUB_ENV
          
      - name: Install Dependencies
        if: runner.os == 'Linux'
        run: |
          sudo dpkg --add-architecture i386
          sudo apt-get update
          sudo apt-get install -y clang g++-multilib
          # sudo apt-get install -y g++-multilib gcc-multilib
          sudo apt-get install -y git python3-pip
          echo "CC=clang" >> $GITHUB_ENV
          echo "CXX=clang++" >> $GITHUB_ENV

      - name: Prepare Alliedmodders Directory
        run: |
          mkdir alliedmodders

      - name: Prepare Metamod
        run: |
          cd alliedmodders
          git clone https://github.com/Bots-United/metamod-p

      - name: Prepare HLSDK SDK
        run: |
          cd alliedmodders
          git clone https://github.com/ValveSoftware/halflife

      - name: Install AMBuild
        run: |
          cd alliedmodders
          git clone https://github.com/alliedmodders/ambuild
          pip install ./ambuild

      - name: Configure AMBuild
        run: |
          cd module
          mkdir build
          cd build
          python3 ../configure.py --metamod=../../alliedmodders/metamod-p --hlsdk=../../alliedmodders/halflife

      - name: Run AMBuild
        run: |
          cd module
          cd build
          ambuild

      - name: Copy to addons directory
        run: |
          cp -r /home/runner/work/CSBotEnabler/CSBotEnabler/module/build/package/addons/amxmodx/modules /home/runner/work/CSBotEnabler/CSBotEnabler/addons/amxmodx

      - name: Upload Binary (Package)
        uses: actions/upload-artifact@v2
        with:
          name: sendproxy
          path: /home/runner/work/CSBotEnabler/CSBotEnabler/addons

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: sendproxy
          path: /tmp/CSBotEnabler

      - name: Get latest tag
        id: tag
        run: |
          echo "TAG=$(curl -s "https://api.github.com/repos/${{ github.repository }}/tags" | jq -r ".[0].name")" >> $GITHUB_ENV

      - name: Zip sourcemod directory
        run: (cd /tmp/CSBotEnabler/amxmodx/ && zip -r /tmp/linux_release.zip .)

        
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.TAG }}
          files: /tmp/linux_release.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
